2025-07-01 16:08:36,915 p=32980 u=binus n=ansible | [WARNING]: running playbook inside collection ansible.containerized_installer

2025-07-01 16:08:37,337 p=32980 u=binus n=ansible | PLAY [Preflight checks] ************************************************************
2025-07-01 16:08:37,350 p=32980 u=binus n=ansible | TASK [Gather facts] ****************************************************************
2025-07-01 16:08:39,138 p=32980 u=binus n=ansible | ok: [localhost]
2025-07-01 16:08:39,145 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Test for ostree-based OS] ***********
2025-07-01 16:08:39,512 p=32980 u=binus n=ansible | ok: [localhost]
2025-07-01 16:08:39,518 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set ostree-based OS fact] ***********
2025-07-01 16:08:39,536 p=32980 u=binus n=ansible | ok: [localhost]
2025-07-01 16:08:39,551 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure registry username and password are provided] ***
2025-07-01 16:08:39,692 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:39,698 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include database checks] *********
2025-07-01 16:08:39,719 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/database.yml for localhost
2025-07-01 16:08:39,729 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure postgresql admin user and password are not empty when provided] ***
2025-07-01 16:08:39,759 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:39,766 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure only one managed database] ***
2025-07-01 16:08:39,801 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:39,807 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure postgresql admin username is postgres if provided] ***
2025-07-01 16:08:39,846 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:39,852 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure postgresql admin password is provided] ***
2025-07-01 16:08:39,891 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:39,898 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the postgresql_effective_cache_size format] ***
2025-07-01 16:08:39,933 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:39,939 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the postgresql_shared_buffers format] ***
2025-07-01 16:08:39,974 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:39,980 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure postgresql password encryption is valid] ***
2025-07-01 16:08:40,018 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,025 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include redis checks] ************
2025-07-01 16:08:40,042 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/redis.yml for localhost
2025-07-01 16:08:40,053 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure redis mode is a valid choice] ***
2025-07-01 16:08:40,083 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,089 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure redis cluster is correctly configured] ***
2025-07-01 16:08:40,118 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,124 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include controller checks] *******
2025-07-01 16:08:40,167 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/automationcontroller.yml for localhost
2025-07-01 16:08:40,180 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller admin password is provided] ***
2025-07-01 16:08:40,220 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,227 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller postgresql sslmode is a valid choice] ***
2025-07-01 16:08:40,248 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,256 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller_percent_memory_capacity valid choice] ***
2025-07-01 16:08:40,300 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,306 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller postgresql host is provided] ***
2025-07-01 16:08:40,344 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,350 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller postgresql password is provided] ***
2025-07-01 16:08:40,391 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,397 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure using an external database] ***
2025-07-01 16:08:40,418 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,424 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller TLS certificate/key are provided] ***
2025-07-01 16:08:40,444 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,450 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller TLS certificate/key are provided with postgresql authentication enabled] ***
2025-07-01 16:08:40,470 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,477 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the license file presence] ***
2025-07-01 16:08:40,498 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,505 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Validate that the license file exists] ***
2025-07-01 16:08:40,525 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,532 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller license file is provided] ***
2025-07-01 16:08:40,561 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,568 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure controller postinstall dir is provided] ***
2025-07-01 16:08:40,597 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,604 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the controller postinstall directory] ***
2025-07-01 16:08:40,633 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,640 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Validate that the postinstall directory exists] ***
2025-07-01 16:08:40,669 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,675 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check EE extra images structure] ***
2025-07-01 16:08:40,687 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,693 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include hub checks] **************
2025-07-01 16:08:40,745 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/automationhub.yml for localhost
2025-07-01 16:08:40,765 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub admin password is provided] ***
2025-07-01 16:08:40,803 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,809 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub postgresql sslmode is a valid choice] ***
2025-07-01 16:08:40,829 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,835 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub postgresql host is provided] ***
2025-07-01 16:08:40,875 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,881 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub postgresql password is provided] ***
2025-07-01 16:08:40,922 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:40,929 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure using an external database] ***
2025-07-01 16:08:40,950 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,956 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub TLS certificate/key are provided] ***
2025-07-01 16:08:40,976 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:40,982 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub TLS certificate/key are provided with postgresql authentication enabled] ***
2025-07-01 16:08:41,002 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,009 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub storage backend is a valid choice] ***
2025-07-01 16:08:41,029 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,035 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub shared data path is provided and properly formatted for multi-instance] ***
2025-07-01 16:08:41,065 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,071 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure Azure blob storage variables are provided] ***
2025-07-01 16:08:41,091 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,097 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure AWS S3 storage variables are provided] ***
2025-07-01 16:08:41,117 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,124 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub_galaxy_importer structure is valid] ***
2025-07-01 16:08:41,146 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,153 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure automation hub url format when provided] ***
2025-07-01 16:08:41,173 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,179 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure hub postinstall directory is provided] ***
2025-07-01 16:08:41,208 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,214 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the hub postinstall directory] ***
2025-07-01 16:08:41,243 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,249 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Validate that the postinstall directory exists] ***
2025-07-01 16:08:41,278 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,285 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the collection signing when using collections auto sign] ***
2025-07-01 16:08:41,314 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,320 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub collection signing key] ***
2025-07-01 16:08:41,349 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,355 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub collection signing key file] ***
2025-07-01 16:08:41,384 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,390 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Validate that automation hub collection signing key file exists] ***
2025-07-01 16:08:41,422 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,428 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub collection signing key passphrase] ***
2025-07-01 16:08:41,459 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,465 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub container signing key] ***
2025-07-01 16:08:41,495 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,501 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub container signing key file] ***
2025-07-01 16:08:41,530 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,537 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Validate that automation hub container signing key file exists] ***
2025-07-01 16:08:41,566 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,572 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the automation hub container signing key passphrase] ***
2025-07-01 16:08:41,601 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,608 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gnupg directory exists] ***
2025-07-01 16:08:41,637 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,643 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include eda checks] **************
2025-07-01 16:08:41,687 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/automationeda.yml for localhost
2025-07-01 16:08:41,715 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda admin password is provided] ***
2025-07-01 16:08:41,752 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:41,758 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda postgresql sslmode is a valid choice] ***
2025-07-01 16:08:41,778 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,785 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda postgresql host is provided] ***
2025-07-01 16:08:41,822 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:41,828 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda postgresql password is provided] ***
2025-07-01 16:08:41,924 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:41,930 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure using an external database] ***
2025-07-01 16:08:41,950 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,957 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda TLS certificate/key are provided] ***
2025-07-01 16:08:41,977 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:41,984 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda TLS certificate/key are provided with postgresql authentication enabled] ***
2025-07-01 16:08:42,005 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,011 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda_max_running_activations in a positive integer] ***
2025-07-01 16:08:42,031 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,038 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure eda type is a valid choice] ***
2025-07-01 16:08:42,083 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:42,089 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure api, event-stream and worker node exist when no hybrid] ***
2025-07-01 16:08:42,133 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,139 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check DE extra images structure] ***
2025-07-01 16:08:42,152 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,157 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure automation eda event-stream url format when provided] ***
2025-07-01 16:08:42,180 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,186 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include receptor checks] *********
2025-07-01 16:08:42,216 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,223 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Include gateway checks] **********
2025-07-01 16:08:42,244 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/automationgateway.yml for localhost
2025-07-01 16:08:42,277 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure a gateway node is present] ***
2025-07-01 16:08:42,311 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:42,318 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway admin password is provided] ***
2025-07-01 16:08:42,358 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:42,365 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway postgresql sslmode is a valid choice] ***
2025-07-01 16:08:42,389 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,395 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway postgresql host is provided] ***
2025-07-01 16:08:42,433 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:42,440 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway postgresql password is provided] ***
2025-07-01 16:08:42,482 p=32980 u=binus n=ansible | ok: [localhost] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:42,489 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure using an external database] ***
2025-07-01 16:08:42,510 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,516 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway TLS certificate/key are provided] ***
2025-07-01 16:08:42,536 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,542 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure gateway TLS certificate/key are provided with postgresql authentication enabled] ***
2025-07-01 16:08:42,563 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,569 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure automation gateway url format when provided] ***
2025-07-01 16:08:42,589 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,595 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure bundle_dir is provided] ***
2025-07-01 16:08:42,626 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,632 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the images directory] ******
2025-07-01 16:08:42,663 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,669 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure the images directory exists] ***
2025-07-01 16:08:42,699 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,705 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check the collections directory] ***
2025-07-01 16:08:42,734 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,740 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure the collections directory exists] ***
2025-07-01 16:08:42,770 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,777 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure feature_flags is a dictonary] ***
2025-07-01 16:08:42,797 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,803 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure feature_flags keys/values are valid] ***
2025-07-01 16:08:42,836 p=32980 u=binus n=ansible | skipping: [localhost]
2025-07-01 16:08:42,865 p=32980 u=binus n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: execution_nodes

2025-07-01 16:08:42,866 p=32980 u=binus n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: redis

2025-07-01 16:08:42,867 p=32980 u=binus n=ansible | PLAY [Preflight node checks] *******************************************************
2025-07-01 16:08:42,877 p=32980 u=binus n=ansible | TASK [Gather facts] ****************************************************************
2025-07-01 16:08:43,762 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:43,768 p=32980 u=binus n=ansible | TASK [Gather regular user id, uid and home dir] ************************************
2025-07-01 16:08:44,471 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:44,477 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure remote user is non root] ***
2025-07-01 16:08:44,496 p=32980 u=binus n=ansible | ok: [10.100.36.50] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:44,502 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure automation controller remote user id is higher than or equal to 500] ***
2025-07-01 16:08:44,523 p=32980 u=binus n=ansible | ok: [10.100.36.50] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:44,529 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure remote nodes use supported distribution] ***
2025-07-01 16:08:44,553 p=32980 u=binus n=ansible | ok: [10.100.36.50] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-07-01 16:08:44,559 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check CA TLS configuration] ******
2025-07-01 16:08:44,580 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:44,588 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:44,609 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,616 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:44,637 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,643 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:44,664 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,672 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:44,693 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,700 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:44,731 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,737 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:44,769 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,775 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:44,806 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,812 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:44,843 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,850 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation controller TLS configuration] ***
2025-07-01 16:08:44,876 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:44,884 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:44,910 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,917 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:44,940 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,946 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:44,969 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:44,976 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:44,999 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,006 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:45,038 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,045 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:45,077 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,084 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:45,116 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,123 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:45,157 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,163 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation controller postgresql TLS configuration] ***
2025-07-01 16:08:45,185 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,192 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation controller external postgresql configuration] ***
2025-07-01 16:08:45,225 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,232 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation controller external postgresql configuration] ***
2025-07-01 16:08:45,264 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,271 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation hub TLS configuration] ***
2025-07-01 16:08:45,296 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:45,304 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:45,329 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,335 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:45,357 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,364 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:45,389 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,395 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:45,418 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,425 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:45,457 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,463 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:45,495 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,502 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:45,534 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,541 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:45,572 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,579 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation hub postgresql TLS configuration] ***
2025-07-01 16:08:45,601 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,608 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation hub external postgresql configuration] ***
2025-07-01 16:08:45,641 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,648 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation hub external postgresql configuration] ***
2025-07-01 16:08:45,679 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,686 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation eda TLS configuration] ***
2025-07-01 16:08:45,712 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:45,720 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:45,744 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,751 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:45,774 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,781 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:45,804 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,811 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:45,834 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,841 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:45,876 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,883 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:45,924 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,931 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:45,965 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:45,972 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,005 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,012 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation eda redis TLS configuration] ***
2025-07-01 16:08:46,040 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:46,052 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:46,076 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,083 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:46,108 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,115 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,138 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,145 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:46,169 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,176 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:46,210 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,217 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:46,249 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,258 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:46,291 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,298 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,332 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,340 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation eda postgresql TLS configuration] ***
2025-07-01 16:08:46,362 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,370 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation eda external postgresql configuration] ***
2025-07-01 16:08:46,402 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,409 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation eda external postgresql configuration] ***
2025-07-01 16:08:46,441 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,448 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation gateway TLS configuration] ***
2025-07-01 16:08:46,473 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:46,481 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:46,505 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,512 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:46,534 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,541 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,563 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,571 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:46,595 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,603 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:46,636 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,643 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:46,675 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,681 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:46,713 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,720 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,753 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,760 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation gateway redis TLS configuration] ***
2025-07-01 16:08:46,785 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:46,797 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:46,821 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,827 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:46,850 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,856 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:46,879 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,886 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:46,909 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,915 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:46,947 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,954 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:46,986 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:46,992 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:47,027 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,035 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,067 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,074 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation gateway postgresql TLS configuration] ***
2025-07-01 16:08:47,096 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,103 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation gateway external postgresql configuration] ***
2025-07-01 16:08:47,134 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,141 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check automation gateway external postgresql configuration] ***
2025-07-01 16:08:47,172 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,179 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check redis TLS configuration] ***
2025-07-01 16:08:47,219 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:47,226 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:47,247 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,255 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:47,316 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,323 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,344 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,351 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:47,372 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,379 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:47,410 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,417 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:47,451 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,458 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:47,489 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,497 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,529 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,536 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check postgresql TLS configuration] ***
2025-07-01 16:08:47,563 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:47,573 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:47,596 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,602 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:47,624 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,630 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,651 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,658 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:47,683 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,690 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:47,721 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,727 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:47,758 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,765 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:47,798 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,805 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,835 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,841 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Check receptor TLS configuration] ***
2025-07-01 16:08:47,868 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/preflight/tasks/tls.yml for 10.100.36.50
2025-07-01 16:08:47,876 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure both TLS certificate and key are provided] ***
2025-07-01 16:08:47,900 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,906 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS key passphrase is not empty when provided] ***
2025-07-01 16:08:47,929 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,936 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:47,959 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,966 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match (passphrase)] ***
2025-07-01 16:08:47,990 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:47,997 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Install python-cryptography] *****
2025-07-01 16:08:48,032 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,040 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS certificate information] ***
2025-07-01 16:08:48,073 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,080 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get x509 TLS key information] ****
2025-07-01 16:08:48,118 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,124 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure TLS certificate and key match] ***
2025-07-01 16:08:48,158 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,164 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure receptor TLS certificate uses SAN extension with OID] ***
2025-07-01 16:08:48,187 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,193 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Get receptor x509 TLS certificate information] ***
2025-07-01 16:08:48,216 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,222 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.preflight : Ensure receptor TLS certificate uses SAN extension with OID] ***
2025-07-01 16:08:48,246 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:48,276 p=32980 u=binus n=ansible | PLAY [Install common container components] *****************************************
2025-07-01 16:08:48,294 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Get service facts] ******************
2025-07-01 16:08:53,423 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:53,432 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure sub UID/GIDs] *************
2025-07-01 16:08:53,456 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/subids.yml for 10.100.36.50
2025-07-01 16:08:53,467 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure user has enough subuids in namespace] ***
2025-07-01 16:08:53,842 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:53,853 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure user has enough subugids in namespace] ***
2025-07-01 16:08:54,254 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:54,264 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Run ostree tasks] *******************
2025-07-01 16:08:54,287 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/ostree.yml for 10.100.36.50
2025-07-01 16:08:54,298 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Test for ostree-based OS] ***********
2025-07-01 16:08:54,558 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:54,569 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set ostree-based OS fact] ***********
2025-07-01 16:08:54,586 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:54,597 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set common facts] *******************
2025-07-01 16:08:54,622 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/facts.yml for 10.100.36.50
2025-07-01 16:08:54,634 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set the TLS CA directory fact] ******
2025-07-01 16:08:54,652 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:54,662 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set io.containers.autoupdate=local label] ***
2025-07-01 16:08:54,693 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,703 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set io.containers.autoupdate=registry label] ***
2025-07-01 16:08:54,735 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:54,746 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Get package Facts] ******************
2025-07-01 16:08:54,777 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,788 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure container tools packages are present] ***
2025-07-01 16:08:54,821 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=crun) 
2025-07-01 16:08:54,825 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=podman) 
2025-07-01 16:08:54,826 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=slirp4netns) 
2025-07-01 16:08:54,827 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=fuse-overlayfs) 
2025-07-01 16:08:54,828 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,838 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure python3-cryptography and python3-psycopg2 python packages are present] ***
2025-07-01 16:08:54,868 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,902 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure python3-cryptography python package is present] ***
2025-07-01 16:08:54,932 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,942 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure python3-firewall package is present] ***
2025-07-01 16:08:54,976 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:54,987 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Install container tools] ************
2025-07-01 16:08:59,291 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:08:59,301 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set maxkeys] ************************
2025-07-01 16:08:59,316 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:59,326 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set maxbytes] ***********************
2025-07-01 16:08:59,340 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:08:59,350 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the containers config directory] ***
2025-07-01 16:08:59,695 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:08:59,706 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure podman runtime with crun] ***
2025-07-01 16:09:00,320 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:00,331 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure podman execution plane] ***
2025-07-01 16:09:00,361 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/executionplane.yml for 10.100.36.50
2025-07-01 16:09:00,374 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the custom podman rootless storage folder] ***
2025-07-01 16:09:00,584 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:00,595 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create custom podman storage.conf] ***
2025-07-01 16:09:01,009 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:01,020 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create directory for custom podman service configuration] ***
2025-07-01 16:09:01,230 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:01,241 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure podman service] ***********
2025-07-01 16:09:01,626 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:01,637 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Enable podman socket] ***************
2025-07-01 16:09:02,395 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:02,406 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create podman custom command] *******
2025-07-01 16:09:02,792 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:02,803 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Install polkit] *********************
2025-07-01 16:09:06,718 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:06,728 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure polkit is started] ***********
2025-07-01 16:09:07,122 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:07,132 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure user belongs to the systemd-journald group] ***
2025-07-01 16:09:07,970 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:07,981 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Disable lingering for ansible_user] ***
2025-07-01 16:09:08,325 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:08,336 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Enable lingering for ansible_user] ***
2025-07-01 16:09:08,580 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:08,591 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set podman version facts] ***********
2025-07-01 16:09:08,612 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/podman_facts.yml for 10.100.36.50
2025-07-01 16:09:08,627 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Get podman version] *****************
2025-07-01 16:09:10,691 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:10,701 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set podman idempotence fact] ********
2025-07-01 16:09:10,735 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:10,746 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Include registry tasks] *************
2025-07-01 16:09:10,790 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/registry.yml for 10.100.36.50
2025-07-01 16:09:10,806 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Login to the registry] **************
2025-07-01 16:09:13,375 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:09:13,386 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Include container image tasks] ******
2025-07-01 16:09:13,413 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/images.yml for 10.100.36.50
2025-07-01 16:09:13,429 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set full container images URL] ******
2025-07-01 16:09:13,457 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,467 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add gateway images to the list] *****
2025-07-01 16:09:13,501 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,512 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add controller image to the list] ***
2025-07-01 16:09:13,546 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,556 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add receptor image to the list] *****
2025-07-01 16:09:13,591 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,601 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add eda images to the list] *********
2025-07-01 16:09:13,636 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,646 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add hub images to the list] *********
2025-07-01 16:09:13,680 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,691 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add redis image to the list] ********
2025-07-01 16:09:13,727 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,737 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add postgresql image to the list] ***
2025-07-01 16:09:13,771 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,781 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add performance co-pilot image to the list] ***
2025-07-01 16:09:13,811 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:13,822 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add DE images to the list] **********
2025-07-01 16:09:13,856 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,868 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add EE images to the list] **********
2025-07-01 16:09:13,903 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:09:13,913 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set de_extra_images fact] ***********
2025-07-01 16:09:13,942 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:13,952 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add extra DE images to the ee list] ***
2025-07-01 16:09:13,981 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:13,991 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set ee_extra_images fact] ***********
2025-07-01 16:09:14,021 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,032 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add extra EE images to the ee list] ***
2025-07-01 16:09:14,062 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,072 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Install compress/rsync packages] ****
2025-07-01 16:09:14,100 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,110 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create temporary directory for container tarballs] ***
2025-07-01 16:09:14,139 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,156 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create temporary file for rsync filter] ***
2025-07-01 16:09:14,185 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,201 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the rsync filter] ************
2025-07-01 16:09:14,231 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,244 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy bundled container images] ******
2025-07-01 16:09:14,274 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,288 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Remove temorary rsync filter file] ***
2025-07-01 16:09:14,317 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,327 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Uncompress bundled container images] ***
2025-07-01 16:09:14,364 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-rhel8:latest) 
2025-07-01 16:09:14,368 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-proxy-rhel8:latest) 
2025-07-01 16:09:14,368 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/controller-rhel8:latest) 
2025-07-01 16:09:14,373 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/receptor-rhel8:latest) 
2025-07-01 16:09:14,374 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-rhel8:latest) 
2025-07-01 16:09:14,379 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-ui-rhel8:latest) 
2025-07-01 16:09:14,385 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-rhel8:latest) 
2025-07-01 16:09:14,386 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-web-rhel8:latest) 
2025-07-01 16:09:14,386 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/rhel8/redis-6:latest) 
2025-07-01 16:09:14,393 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/rhel8/postgresql-15:latest) 
2025-07-01 16:09:14,396 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest) 
2025-07-01 16:09:14,396 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest) 
2025-07-01 16:09:14,397 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel8:latest) 
2025-07-01 16:09:14,398 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,435 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Load the controlplane container images] ***
2025-07-01 16:09:14,468 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-rhel8:latest) 
2025-07-01 16:09:14,472 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-proxy-rhel8:latest) 
2025-07-01 16:09:14,473 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/controller-rhel8:latest) 
2025-07-01 16:09:14,478 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/receptor-rhel8:latest) 
2025-07-01 16:09:14,478 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-rhel8:latest) 
2025-07-01 16:09:14,484 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-ui-rhel8:latest) 
2025-07-01 16:09:14,489 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-rhel8:latest) 
2025-07-01 16:09:14,489 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-web-rhel8:latest) 
2025-07-01 16:09:14,490 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/rhel8/redis-6:latest) 
2025-07-01 16:09:14,490 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/rhel8/postgresql-15:latest) 
2025-07-01 16:09:14,491 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,501 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Load the executionplane container images] ***
2025-07-01 16:09:14,537 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest) 
2025-07-01 16:09:14,539 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest) 
2025-07-01 16:09:14,539 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel8:latest) 
2025-07-01 16:09:14,541 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,551 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Remove temporary directory] *********
2025-07-01 16:09:14,578 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:09:14,589 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Pull the controlplane container images] ***
2025-07-01 16:10:26,084 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-rhel8:latest)
2025-07-01 16:10:55,987 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/gateway-proxy-rhel8:latest)
2025-07-01 16:12:43,971 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/controller-rhel8:latest)
2025-07-01 16:13:25,073 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/receptor-rhel8:latest)
2025-07-01 16:14:28,748 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-rhel8:latest)
2025-07-01 16:15:36,992 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/eda-controller-ui-rhel8:latest)
2025-07-01 16:16:51,684 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-rhel8:latest)
2025-07-01 16:16:59,790 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/hub-web-rhel8:latest)
2025-07-01 16:17:22,558 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/rhel8/redis-6:latest)
2025-07-01 16:18:09,205 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/rhel8/postgresql-15:latest)
2025-07-01 16:18:09,262 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Pull the executionplane container images] ***
2025-07-01 16:19:35,918 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest)
2025-07-01 16:20:02,933 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest)
2025-07-01 16:22:28,676 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel8:latest)
2025-07-01 16:22:28,694 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure firewalld] ****************
2025-07-01 16:22:28,719 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:22:28,731 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Ensure firewalld is started] ********
2025-07-01 16:22:29,307 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:22:29,317 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Install python-firewall] ************
2025-07-01 16:22:33,177 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:33,188 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Configure TLS CA] *******************
2025-07-01 16:22:33,220 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/common/tasks/tls.yml for 10.100.36.50
2025-07-01 16:22:33,233 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the TLS CA directory] ********
2025-07-01 16:22:33,451 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:22:33,461 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Install python-cryptography] ********
2025-07-01 16:22:37,854 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:37,864 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Generate a private key] *************
2025-07-01 16:22:39,566 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:22:39,576 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Check the current CA certificate] ***
2025-07-01 16:22:39,794 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:39,805 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Generate a certificate signing request] ***
2025-07-01 16:22:40,732 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:22:40,743 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Generate a self signed x509 certificate] ***
2025-07-01 16:22:41,810 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:22:41,826 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create local temporary directory] ***
2025-07-01 16:22:42,214 p=32980 u=binus n=ansible | changed: [10.100.36.50 -> localhost]
2025-07-01 16:22:42,226 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Fetch files locally] ****************
2025-07-01 16:22:42,544 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=cert)
2025-07-01 16:22:42,777 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=key)
2025-07-01 16:22:42,788 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy TLS CA certificate] ************
2025-07-01 16:22:43,253 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:43,264 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy TLS CA key] ********************
2025-07-01 16:22:44,304 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:44,320 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Remove local temporary directory] ***
2025-07-01 16:22:44,631 p=32980 u=binus n=ansible | changed: [10.100.36.50 -> localhost]
2025-07-01 16:22:44,642 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy TLS CA certificate] ************
2025-07-01 16:22:44,663 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:22:44,674 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy TLS CA key] ********************
2025-07-01 16:22:44,695 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:22:44,708 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Set volumes for updating the CA trust] ***
2025-07-01 16:22:44,727 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:22:44,738 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Copy extra TLS CA certificates] *****
2025-07-01 16:22:44,760 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:22:44,772 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add extra TLS CA certificat to volumes] ***
2025-07-01 16:22:44,794 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:22:44,805 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the PKI directories] *********
2025-07-01 16:22:45,293 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=edk2)
2025-07-01 16:22:45,873 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=java)
2025-07-01 16:22:46,257 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=pem)
2025-07-01 16:22:46,967 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=openssl)
2025-07-01 16:22:47,005 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.common : Update CA trust] *********
2025-07-01 16:23:00,121 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:00,142 p=32980 u=binus n=ansible | PLAY [Install the database] ********************************************************
2025-07-01 16:23:00,171 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set postgresql facts] ***********
2025-07-01 16:23:00,200 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/facts.yml for 10.100.36.50
2025-07-01 16:23:00,213 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set postgresql hostname] ********
2025-07-01 16:23:00,248 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:00,260 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set postgresql IPs] *************
2025-07-01 16:23:00,300 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:23:00,304 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:23:00,316 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set postgresql volumes] *********
2025-07-01 16:23:00,336 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:00,349 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Add tls to volumes] *************
2025-07-01 16:23:00,388 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:00,400 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set effective cache size fact for dedicated database node] ***
2025-07-01 16:23:00,426 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:00,437 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set effective cache size fact for collocated database node] ***
2025-07-01 16:23:00,500 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:00,511 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set shared buffers fact for dedicated database node] ***
2025-07-01 16:23:00,536 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:00,550 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set shared buffers fact for collocated database node] ***
2025-07-01 16:23:00,593 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:00,604 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Configure podman secrets] *******
2025-07-01 16:23:00,627 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/secrets.yml for 10.100.36.50
2025-07-01 16:23:00,642 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Create the postgresql admin password secret] ***
2025-07-01 16:23:01,219 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:01,230 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Create podman volumes] **********
2025-07-01 16:23:01,254 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:23:01,270 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Manage the postgresql data volume] ***
2025-07-01 16:23:02,126 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:02,137 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Configure TLS] ******************
2025-07-01 16:23:02,185 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/tls.yml for 10.100.36.50
2025-07-01 16:23:02,203 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Create the postgresql config directory] ***
2025-07-01 16:23:02,428 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:02,439 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Install python-cryptography] ****
2025-07-01 16:23:06,231 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:06,242 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Check the current postgresql private key] ***
2025-07-01 16:23:06,472 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:06,483 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Generate a private key] *********
2025-07-01 16:23:08,171 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:08,184 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Check the current postgresql certificate] ***
2025-07-01 16:23:08,475 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:08,487 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Generate a certificate signing request] ***
2025-07-01 16:23:09,238 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:09,248 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Generate a self signed x509 certificate] ***
2025-07-01 16:23:10,045 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:10,057 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Copy postgresql TLS certificate] ***
2025-07-01 16:23:10,080 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:10,091 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Copy postgresql TLS key] ********
2025-07-01 16:23:10,114 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:10,125 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Configure postgresql] ***********
2025-07-01 16:23:10,148 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/config.yml for 10.100.36.50
2025-07-01 16:23:10,169 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Create the postgresql configuration] ***
2025-07-01 16:23:10,634 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:10,644 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Handle container image update] ***
2025-07-01 16:23:10,670 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/update.yml for 10.100.36.50
2025-07-01 16:23:10,692 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Get postgresql container information] ***
2025-07-01 16:23:11,122 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:11,133 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Get postgresql image information] ***
2025-07-01 16:23:11,738 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:11,750 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Set postgresql update fact] *****
2025-07-01 16:23:11,788 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:11,799 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Stop postgresql service on update] ***
2025-07-01 16:23:11,828 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:11,839 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Configure containers] ***********
2025-07-01 16:23:11,862 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/containers.yml for 10.100.36.50
2025-07-01 16:23:11,885 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Create the postgresql container] ***
2025-07-01 16:23:22,583 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:22,593 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Ensure postgresql container is enabled and started] ***
2025-07-01 16:23:22,615 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:23:22,639 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Manage postgresql container via systemd] ***
2025-07-01 16:23:23,950 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:23,961 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Add firewalld rules] ************
2025-07-01 16:23:23,985 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/postgresql/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:23:24,009 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.postgresql : Manage postgresql firewalld port] ***
2025-07-01 16:23:24,664 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:24,702 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.postgresql : Restart postgresql] ***
2025-07-01 16:23:35,583 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:35,603 p=32980 u=binus n=ansible | PLAY [Install redis cluster cache] *************************************************
2025-07-01 16:23:35,603 p=32980 u=binus n=ansible | skipping: no hosts matched
2025-07-01 16:23:35,604 p=32980 u=binus n=ansible | PLAY [Install the redis cache] *****************************************************
2025-07-01 16:23:35,632 p=32980 u=binus n=ansible | TASK [Install and configure redis unix socket] *************************************
2025-07-01 16:23:35,697 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis facts] *********************
2025-07-01 16:23:35,724 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/facts.yml for 10.100.36.50
2025-07-01 16:23:35,736 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis hostname] ******************
2025-07-01 16:23:35,772 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:35,783 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis IPs] ***********************
2025-07-01 16:23:35,821 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:23:35,824 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:23:35,836 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis cluster IPs] ***************
2025-07-01 16:23:35,868 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:35,879 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis volumes] *******************
2025-07-01 16:23:35,899 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:35,910 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add redis nodes file when cluster] ***
2025-07-01 16:23:35,939 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:35,949 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add runtime directory volume] ********
2025-07-01 16:23:35,983 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:35,994 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add redis ACL file to volumes] *******
2025-07-01 16:23:36,026 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:36,036 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add tls to volumes] ******************
2025-07-01 16:23:36,066 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:36,081 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis user password facts] *******
2025-07-01 16:23:36,111 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:36,122 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create podman volumes] ***************
2025-07-01 16:23:36,145 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:23:36,162 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage the redis data volume] ********
2025-07-01 16:23:36,574 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:36,585 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage the redis run volume] *********
2025-07-01 16:23:37,066 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:37,077 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure redis] *********************
2025-07-01 16:23:37,102 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/config.yml for 10.100.36.50
2025-07-01 16:23:37,118 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis config directory] ***
2025-07-01 16:23:37,403 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:37,414 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis configuration file] ***
2025-07-01 16:23:37,847 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:37,857 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis user ACL file] ******
2025-07-01 16:23:37,887 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:37,898 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create redis nodes file] *************
2025-07-01 16:23:37,927 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:37,938 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure TLS] ***********************
2025-07-01 16:23:37,969 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:37,979 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Handle container image update] *******
2025-07-01 16:23:38,004 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/update.yml for 10.100.36.50
2025-07-01 16:23:38,021 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Get redis container information] *****
2025-07-01 16:23:38,279 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:38,290 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Get redis image information] *********
2025-07-01 16:23:38,635 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:38,683 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis update fact] ***************
2025-07-01 16:23:38,723 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:38,734 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Stop redis service on update] ********
2025-07-01 16:23:38,764 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:38,774 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure containers] ****************
2025-07-01 16:23:38,799 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/containers.yml for 10.100.36.50
2025-07-01 16:23:38,818 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis container] **********
2025-07-01 16:23:43,885 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:43,895 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Ensure redis container is enabled and started] ***
2025-07-01 16:23:43,918 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:23:43,939 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage redis container via systemd] ***
2025-07-01 16:23:46,195 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:46,206 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add firewalld rules] *****************
2025-07-01 16:23:46,236 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:46,248 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Initialize the redis cluster] ********
2025-07-01 16:23:46,277 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:46,297 p=32980 u=binus n=ansible | TASK [Install and configure redis tcp socket] **************************************
2025-07-01 16:23:46,368 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis facts] *********************
2025-07-01 16:23:46,394 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/facts.yml for 10.100.36.50
2025-07-01 16:23:46,406 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis hostname] ******************
2025-07-01 16:23:46,445 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:46,456 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis IPs] ***********************
2025-07-01 16:23:46,495 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:23:46,498 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:23:46,511 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis cluster IPs] ***************
2025-07-01 16:23:46,540 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:46,551 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis volumes] *******************
2025-07-01 16:23:46,571 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:46,582 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add redis nodes file when cluster] ***
2025-07-01 16:23:46,611 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:46,622 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add runtime directory volume] ********
2025-07-01 16:23:46,652 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:46,664 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add redis ACL file to volumes] *******
2025-07-01 16:23:46,700 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:46,711 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add tls to volumes] ******************
2025-07-01 16:23:46,762 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:46,777 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis user password facts] *******
2025-07-01 16:23:46,821 p=32980 u=binus n=ansible | ok: [10.100.36.50 -> localhost]
2025-07-01 16:23:46,831 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create podman volumes] ***************
2025-07-01 16:23:46,855 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:23:46,870 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage the redis data volume] ********
2025-07-01 16:23:47,478 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:47,490 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage the redis run volume] *********
2025-07-01 16:23:47,520 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:47,530 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure redis] *********************
2025-07-01 16:23:47,554 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/config.yml for 10.100.36.50
2025-07-01 16:23:47,570 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis config directory] ***
2025-07-01 16:23:47,791 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:47,802 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis configuration file] ***
2025-07-01 16:23:48,221 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:48,231 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis user ACL file] ******
2025-07-01 16:23:48,734 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:48,743 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create redis nodes file] *************
2025-07-01 16:23:48,773 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:48,783 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure TLS] ***********************
2025-07-01 16:23:48,830 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/tls.yml for 10.100.36.50
2025-07-01 16:23:48,849 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Install python-cryptography] *********
2025-07-01 16:23:52,789 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:52,800 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Check the current redis private key] ***
2025-07-01 16:23:53,014 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:53,025 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Generate a private key] **************
2025-07-01 16:23:54,745 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:54,756 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Check the current redis certificate] ***
2025-07-01 16:23:54,975 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:54,986 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Generate a certificate signing request] ***
2025-07-01 16:23:55,690 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:55,701 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Generate a self signed x509 certificate] ***
2025-07-01 16:23:56,493 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:56,503 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Copy redis TLS certificate] **********
2025-07-01 16:23:56,525 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:56,535 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Copy redis TLS key] ******************
2025-07-01 16:23:56,556 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:56,566 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Handle container image update] *******
2025-07-01 16:23:56,591 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/update.yml for 10.100.36.50
2025-07-01 16:23:56,613 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Get redis container information] *****
2025-07-01 16:23:56,881 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:56,892 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Get redis image information] *********
2025-07-01 16:23:57,212 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:57,223 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Set redis update fact] ***************
2025-07-01 16:23:57,261 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:23:57,272 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Stop redis service on update] ********
2025-07-01 16:23:57,301 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:23:57,311 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Configure containers] ****************
2025-07-01 16:23:57,333 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/containers.yml for 10.100.36.50
2025-07-01 16:23:57,357 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Create the redis container] **********
2025-07-01 16:23:58,525 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:58,536 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Ensure redis container is enabled and started] ***
2025-07-01 16:23:58,557 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:23:58,580 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage redis container via systemd] ***
2025-07-01 16:23:59,545 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:23:59,556 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Add firewalld rules] *****************
2025-07-01 16:23:59,597 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/redis/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:23:59,621 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage redis firewalld port] *********
2025-07-01 16:24:00,060 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:00,070 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Manage redis firewalld cluster port] ***
2025-07-01 16:24:00,100 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:00,110 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.redis : Initialize the redis cluster] ********
2025-07-01 16:24:00,140 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:00,176 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.redis : Restart redis] ************
2025-07-01 16:24:01,319 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:01,329 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.redis : Restart redis] ************
2025-07-01 16:24:02,519 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:02,541 p=32980 u=binus n=ansible | PLAY [Get Automation Controller configuration for gateway] *************************
2025-07-01 16:24:02,569 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller hostname, port(s) and protocol] ***
2025-07-01 16:24:02,606 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,622 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add https port to controller port list] ***
2025-07-01 16:24:02,658 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,672 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller URL] ***
2025-07-01 16:24:02,691 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,702 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller IPs] ***
2025-07-01 16:24:02,743 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:24:02,746 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:24:02,758 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql container to requires when on the same node] ***
2025-07-01 16:24:02,802 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,816 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set automation controller volumes] ***
2025-07-01 16:24:02,865 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,877 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql tls to automation controller volumes] ***
2025-07-01 16:24:02,908 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:02,919 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql socket directory to common automation controller volumes] ***
2025-07-01 16:24:02,943 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:02,954 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set rsyslog/task/web automation controller volumes] ***
2025-07-01 16:24:02,978 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:02,990 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add tls to web automation controller volumes] ***
2025-07-01 16:24:03,028 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,039 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set systemd requires] ***
2025-07-01 16:24:03,079 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,090 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set environment variables for recent AAP releases] ***
2025-07-01 16:24:03,109 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,158 p=32980 u=binus n=ansible | PLAY [Get Automation EDA configuration for gateway] ********************************
2025-07-01 16:24:03,188 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda hostname, port(s) and protocol] ***
2025-07-01 16:24:03,226 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,237 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda redis hostname] ******
2025-07-01 16:24:03,270 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,281 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add https port to eda port list] ***
2025-07-01 16:24:03,316 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,327 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda URL] *****************
2025-07-01 16:24:03,348 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,360 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda IPs] *****************
2025-07-01 16:24:03,400 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:24:03,403 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:24:03,414 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set decision environment facts] ***
2025-07-01 16:24:03,451 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,461 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Remove redis container dependency when using multiple nodes] ***
2025-07-01 16:24:03,494 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,505 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql container to requires when on the same node] ***
2025-07-01 16:24:03,540 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,552 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set automation eda env and volume facts] ***
2025-07-01 16:24:03,578 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,590 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql password secret to secrets] ***
2025-07-01 16:24:03,624 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,635 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql tls to common automation eda volumes] ***
2025-07-01 16:24:03,665 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,676 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql socket directory to common automation eda volumes] ***
2025-07-01 16:24:03,698 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,710 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add redis password to secrets] ***
2025-07-01 16:24:03,788 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,798 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set scheduler/web/worker automation eda env/volumes/secrets] ***
2025-07-01 16:24:03,833 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,844 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add tls to web automation eda volumes] ***
2025-07-01 16:24:03,882 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,893 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Use local redis instance with single node] ***
2025-07-01 16:24:03,941 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:03,952 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add redis tls to api/scheduler/workers automation eda volumes] ***
2025-07-01 16:24:03,985 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:03,996 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set redis cluster hostnames] ***
2025-07-01 16:24:04,028 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,039 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda rulebook queue name] ***
2025-07-01 16:24:04,077 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,087 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set systemd requires] ********
2025-07-01 16:24:04,126 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,174 p=32980 u=binus n=ansible | PLAY [Get Automation Hub configuration for gateway] ********************************
2025-07-01 16:24:04,203 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub hostname, port(s) and protocol] ***
2025-07-01 16:24:04,242 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,253 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add https port to hub port list] ***
2025-07-01 16:24:04,288 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,299 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub IPs] *****************
2025-07-01 16:24:04,338 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:24:04,341 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:24:04,354 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql container to requires when on the same node] ***
2025-07-01 16:24:04,388 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,399 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set automation hub volumes] ***
2025-07-01 16:24:04,438 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,449 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add hub tmp volume when using NFS] ***
2025-07-01 16:24:04,479 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,490 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql socket directory to common automation hub volumes] ***
2025-07-01 16:24:04,512 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,525 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql tls to automation hub volumes] ***
2025-07-01 16:24:04,554 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,565 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set api/content/worker automation hub volumes] ***
2025-07-01 16:24:04,589 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,600 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add galaxy importer to worker volumes] ***
2025-07-01 16:24:04,621 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,632 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add tls to web automation hub volumes] ***
2025-07-01 16:24:04,669 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,681 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add collection volume to automation worker volumes] ***
2025-07-01 16:24:04,710 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,721 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add collection secret to automation worker secrets] ***
2025-07-01 16:24:04,752 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,762 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add container volume to automation worker volumes] ***
2025-07-01 16:24:04,792 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,803 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add container secret to automation worker secrets] ***
2025-07-01 16:24:04,833 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:04,845 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set systemd requires] ********
2025-07-01 16:24:04,883 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:04,929 p=32980 u=binus n=ansible | PLAY [Install the Automation Gateway] **********************************************
2025-07-01 16:24:04,958 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set automation gateway facts] ***
2025-07-01 16:24:04,989 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/facts.yml for 10.100.36.50
2025-07-01 16:24:05,003 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway hostname, port(s) and protocol] ***
2025-07-01 16:24:05,044 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,054 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add https port to gateway port list] ***
2025-07-01 16:24:05,089 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,100 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add https port to gateway proxy port list] ***
2025-07-01 16:24:05,135 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,146 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Combine gateway ports] ***
2025-07-01 16:24:05,178 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,188 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway URL] *********
2025-07-01 16:24:05,225 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,235 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway IPs] *********
2025-07-01 16:24:05,275 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:24:05,278 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:24:05,290 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql container to requires when on the same node] ***
2025-07-01 16:24:05,325 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,336 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis hostname] ***
2025-07-01 16:24:05,370 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,382 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis proto/host facts] ***
2025-07-01 16:24:05,462 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,472 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis url facts] ***
2025-07-01 16:24:05,499 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,509 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Append redis database when standalone] ***
2025-07-01 16:24:05,545 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,556 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set redis cluster hostnames] ***
2025-07-01 16:24:05,587 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:05,599 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set automation gateway volumes] ***
2025-07-01 16:24:05,627 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,638 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql password secret to secrets] ***
2025-07-01 16:24:05,673 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,684 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql socket directory to common automation gateway volumes] ***
2025-07-01 16:24:05,706 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:05,717 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set web automation gateway and proxy volumes] ***
2025-07-01 16:24:05,742 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,755 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql tls to automation gateway volumes] ***
2025-07-01 16:24:05,784 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:05,795 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add tls to automation gateway volumes] ***
2025-07-01 16:24:05,832 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,842 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add tls to automation gateway proxy volumes] ***
2025-07-01 16:24:05,880 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,890 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add redis tls to automation gateway volumes] ***
2025-07-01 16:24:05,927 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:05,939 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Render proxy variables] ***
2025-07-01 16:24:06,313 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:06,324 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set systemd requires] ****
2025-07-01 16:24:06,362 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:06,373 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create podman volumes] ***
2025-07-01 16:24:06,396 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:24:06,417 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Manage the Automation Gateway nginx volume] ***
2025-07-01 16:24:07,033 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:07,044 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure postgresql] ****
2025-07-01 16:24:07,098 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/postgresql.yml for 10.100.36.50
2025-07-01 16:24:07,119 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Install python-psycopg2] ***
2025-07-01 16:24:13,123 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:13,134 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Wait for postgresql to be ready] ***
2025-07-01 16:24:14,703 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:14,714 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the automation gateway postgresql user] ***
2025-07-01 16:24:15,191 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:15,202 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Grant the automation gateway role to postgresql admin user] ***
2025-07-01 16:24:15,615 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:15,630 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the automation gateway postgresql database] ***
2025-07-01 16:24:16,584 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:16,595 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure automation gateway] ***
2025-07-01 16:24:16,625 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/config.yml for 10.100.36.50
2025-07-01 16:24:16,649 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway directories] ***
2025-07-01 16:24:16,914 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/gatewayproxy/etc)
2025-07-01 16:24:17,113 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/gateway/nginx/etc)
2025-07-01 16:24:17,310 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/gateway/etc)
2025-07-01 16:24:17,321 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the envoy configuration] ***
2025-07-01 16:24:17,790 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:17,806 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check current somaxconn value] ***
2025-07-01 16:24:18,123 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:18,134 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check current net.ipv4.tcp_max_syn_backlog value] ***
2025-07-01 16:24:18,334 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:18,346 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set somaxconn to value greater than or equal to gateway_uwsgi_listen_queue_size in supervisor config] ***
2025-07-01 16:24:18,378 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:18,389 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set tcp_max_syn_backlog to value greater than or equal to gateway_uwsgi_listen_queue_size in supervisor config] ***
2025-07-01 16:24:18,767 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:18,778 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the uwsgi configuration] ***
2025-07-01 16:24:19,197 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:19,208 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway django settings override file] ***
2025-07-01 16:24:19,628 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:19,638 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure TLS or nginx] ***
2025-07-01 16:24:19,685 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/tls.yml for 10.100.36.50
2025-07-01 16:24:19,712 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Install python-cryptography] ***
2025-07-01 16:24:23,607 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:23,617 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check the current gateway private key] ***
2025-07-01 16:24:23,833 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:23,844 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a private key] ***
2025-07-01 16:24:25,369 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:25,380 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check the current gateway certificate] ***
2025-07-01 16:24:25,598 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:25,609 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a certificate signing request] ***
2025-07-01 16:24:26,325 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:26,336 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a self signed x509 certificate] ***
2025-07-01 16:24:27,152 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:27,163 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Copy gateway TLS certificate] ***
2025-07-01 16:24:27,186 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:27,197 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Copy gateway TLS key] ****
2025-07-01 16:24:27,219 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:27,230 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure TLS for redis] ***
2025-07-01 16:24:27,279 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/tls_redis.yml for 10.100.36.50
2025-07-01 16:24:27,310 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Install python-cryptography] ***
2025-07-01 16:24:31,089 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:31,100 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check the current gateway redis private key] ***
2025-07-01 16:24:31,371 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:31,381 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a private key for redis] ***
2025-07-01 16:24:32,887 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:32,898 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Check the current gateway redis certificate] ***
2025-07-01 16:24:33,135 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:33,147 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a certificate signing request for redis] ***
2025-07-01 16:24:33,863 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:33,874 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate a self signed x509 certificate for redis] ***
2025-07-01 16:24:34,681 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:34,693 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Copy redis TLS certificate] ***
2025-07-01 16:24:34,715 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:34,726 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Copy redis TLS key] ******
2025-07-01 16:24:34,749 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:34,760 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure TLS for postgresql] ***
2025-07-01 16:24:34,789 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:34,801 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure nginx] *********
2025-07-01 16:24:34,825 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/nginx.yml for 10.100.36.50
2025-07-01 16:24:34,858 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get sysctl net.ipv4.ip_unprivileged_port_start setting] ***
2025-07-01 16:24:35,058 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:35,068 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Allow rootless automation gateway containers to bind from port 80 onwards] ***
2025-07-01 16:24:35,391 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:35,402 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the nginx configuration] ***
2025-07-01 16:24:35,841 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:35,852 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure supervisor] ****
2025-07-01 16:24:35,876 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/supervisor.yml for 10.100.36.50
2025-07-01 16:24:35,911 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the supervisor directory] ***
2025-07-01 16:24:36,127 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:36,138 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the supervisor configuration] ***
2025-07-01 16:24:36,782 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:36,793 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure podman secrets] ***
2025-07-01 16:24:36,821 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/secrets.yml for 10.100.36.50
2025-07-01 16:24:36,855 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get all podman secrets] ***
2025-07-01 16:24:37,329 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:37,340 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway admin password secret] ***
2025-07-01 16:24:37,766 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:37,777 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway db_password secret] ***
2025-07-01 16:24:38,237 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:38,248 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway redis url secret] ***
2025-07-01 16:24:38,689 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:38,699 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get the existing gateway secret key secret] ***
2025-07-01 16:24:38,738 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:38,749 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set the gateway secret key secret fact] ***
2025-07-01 16:24:38,786 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:38,797 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the gateway secret_key secret] ***
2025-07-01 16:24:39,212 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:39,223 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get all podman secrets after update] ***
2025-07-01 16:24:39,538 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:39,549 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway recreate container fact] ***
2025-07-01 16:24:39,588 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:39,599 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Handle container image update] ***
2025-07-01 16:24:39,626 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/update.yml for 10.100.36.50
2025-07-01 16:24:39,665 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get gateway container information] ***
2025-07-01 16:24:40,031 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:40,042 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get gateway image information] ***
2025-07-01 16:24:40,431 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:40,442 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway update fact] ***
2025-07-01 16:24:40,482 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:24:40,493 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Stop gateway service on update] ***
2025-07-01 16:24:40,525 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:24:40,535 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Configure containers] ****
2025-07-01 16:24:40,560 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/containers.yml for 10.100.36.50
2025-07-01 16:24:40,600 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the automation gateway proxy container] ***
2025-07-01 16:24:42,839 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:24:42,850 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create the automation gateway container] ***
2025-07-01 16:25:32,774 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:25:32,785 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Initialize data] *********
2025-07-01 16:25:32,814 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/init.yml for 10.100.36.50
2025-07-01 16:25:32,854 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Initialize the automation gateway database] ***
2025-07-01 16:26:25,839 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:25,851 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Create django super user] ***
2025-07-01 16:26:29,971 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:29,986 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update django super user password] ***
2025-07-01 16:26:33,397 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:26:33,410 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Initialize authenticators] ***
2025-07-01 16:26:36,409 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:36,423 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Ensure automation gateway containers are enabled and started] ***
2025-07-01 16:26:36,451 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:26:36,497 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set facts for systemd services] ***
2025-07-01 16:26:36,515 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:26:36,526 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Manage automation gateway containers via systemd] ***
2025-07-01 16:26:37,229 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-gateway.service)
2025-07-01 16:26:37,905 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-gateway-proxy.service)
2025-07-01 16:26:37,917 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add firewalld rules] *****
2025-07-01 16:26:37,942 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:26:37,989 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Manage automation gateway firewalld ports] ***
2025-07-01 16:26:38,454 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8083)
2025-07-01 16:26:38,882 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8446)
2025-07-01 16:26:39,782 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=80)
2025-07-01 16:26:40,952 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=443)
2025-07-01 16:26:41,040 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationgateway : Restart automation gateway proxy] ***
2025-07-01 16:26:41,955 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:41,966 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationgateway : Restart automation gateway] ***
2025-07-01 16:26:43,137 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:43,158 p=32980 u=binus n=ansible | PLAY [Run the Automation Gateway postinstall] **************************************
2025-07-01 16:26:43,188 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Ensure automation gateway is ready] ***
2025-07-01 16:26:55,018 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:26:55,029 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway settings] ***
2025-07-01 16:26:57,184 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:26:57,196 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway http ports] ***
2025-07-01 16:26:58,496 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'port-443', 'number': 443, 'use_https': True, 'is_api_port': True})
2025-07-01 16:26:58,509 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway service clusters] ***
2025-07-01 16:27:00,166 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'gateway', 'service_type': 'gateway'})
2025-07-01 16:27:01,461 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'controller', 'service_type': 'controller'})
2025-07-01 16:27:02,776 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'hub', 'service_type': 'hub'})
2025-07-01 16:27:04,040 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'eda', 'service_type': 'eda'})
2025-07-01 16:27:04,053 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway service nodes] ***
2025-07-01 16:27:05,616 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Node gateway - 10.100.36.50', 'service_cluster': 'gateway', 'address': '10.100.36.50'})
2025-07-01 16:27:06,874 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Node controller - 10.100.36.50', 'service_cluster': 'controller', 'address': '10.100.36.50'})
2025-07-01 16:27:08,814 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Node hub - 10.100.36.50', 'service_cluster': 'hub', 'address': '10.100.36.50'})
2025-07-01 16:27:10,395 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Node eda - 10.100.36.50', 'service_cluster': 'eda', 'address': '10.100.36.50', 'tags': 'eda-hybrid'})
2025-07-01 16:27:10,407 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway services] ***
2025-07-01 16:27:12,150 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'gateway api', 'api_slug': 'gateway', 'http_port': 'port-443', 'service_cluster': 'gateway', 'is_service_https': True, 'service_path': '/', 'service_port': 8446, 'order': 100, 'enable_gateway_auth': False})
2025-07-01 16:27:13,762 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'controller api', 'api_slug': 'controller', 'http_port': 'port-443', 'service_cluster': 'controller', 'is_service_https': True, 'service_path': '/api/controller/', 'service_port': 8443, 'order': 1})
2025-07-01 16:27:15,514 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'galaxy api', 'api_slug': 'galaxy', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_path': '/api/galaxy/', 'service_port': 8444, 'order': 2})
2025-07-01 16:27:17,167 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'eda api', 'api_slug': 'eda', 'http_port': 'port-443', 'service_cluster': 'eda', 'is_service_https': True, 'service_path': '/api/eda/', 'service_port': 8445, 'order': 3})
2025-07-01 16:27:17,180 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Gather Service Nodes] ****
2025-07-01 16:27:20,248 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:20,259 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set current service nodes facts] ***
2025-07-01 16:27:20,305 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:20,317 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway service nodes] ***
2025-07-01 16:27:20,358 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=Node gateway - 10.100.36.50) 
2025-07-01 16:27:20,362 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=Node controller - 10.100.36.50) 
2025-07-01 16:27:20,368 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=Node hub - 10.100.36.50) 
2025-07-01 16:27:20,371 p=32980 u=binus n=ansible | skipping: [10.100.36.50] => (item=Node eda - 10.100.36.50) 
2025-07-01 16:27:20,373 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:27:20,384 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Update automation platform gateway routes] ***
2025-07-01 16:27:22,216 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'hub container registry', 'description': 'Hub Container Registry.', 'gateway_path': '/v2/', 'service_path': '/v2/', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:23,747 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'hub ui', 'description': 'Hub UI', 'gateway_path': '/ui/', 'service_path': '/ui/', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:25,342 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'hub ui static files', 'description': 'Hub UI Static Files', 'gateway_path': '/static/galaxy_ng/', 'service_path': '/static/galaxy_ng/', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:26,956 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'pulp content', 'description': 'Pulp Content', 'gateway_path': '/pulp', 'service_path': '/pulp', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:28,522 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'pulp container tokens', 'description': 'Pulp Container Tokens', 'gateway_path': '/token', 'service_path': '/token', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:30,068 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'pulp container extensions', 'description': 'Pulp Container Extensions', 'gateway_path': '/extensions', 'service_path': '/extensions', 'http_port': 'port-443', 'service_cluster': 'hub', 'is_service_https': True, 'service_port': 8444, 'enable_gateway_auth': True})
2025-07-01 16:27:31,689 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Event Driven Automation Event Stream', 'description': 'Proxy to the EDA Event Streams', 'gateway_path': '/eda-event-streams/', 'service_path': '/', 'http_port': 'port-443', 'service_cluster': 'eda', 'is_service_https': True, 'service_port': 8445, 'enable_gateway_auth': False, 'node_tags': 'eda-hybrid,eda-event-stream'})
2025-07-01 16:27:31,766 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get all controller podman secrets] ***
2025-07-01 16:27:32,080 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:32,092 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate controller service key] ***
2025-07-01 16:27:32,135 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/service_key.yml for 10.100.36.50
2025-07-01 16:27:32,146 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate service key] ****
2025-07-01 16:27:34,917 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:34,928 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set controller service key fact] ***
2025-07-01 16:27:34,962 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:34,985 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get all eda podman secrets] ***
2025-07-01 16:27:35,309 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:35,319 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate eda service key] ***
2025-07-01 16:27:35,362 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/service_key.yml for 10.100.36.50
2025-07-01 16:27:35,373 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate service key] ****
2025-07-01 16:27:38,380 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:38,391 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set eda service key fact] ***
2025-07-01 16:27:38,425 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:38,448 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Get all hub podman secrets] ***
2025-07-01 16:27:38,804 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:38,815 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate hub service key] ***
2025-07-01 16:27:38,856 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/service_key.yml for 10.100.36.50
2025-07-01 16:27:38,867 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Generate service key] ****
2025-07-01 16:27:41,551 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:41,563 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set hub service key fact] ***
2025-07-01 16:27:41,597 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:41,645 p=32980 u=binus n=ansible | PLAY [Install and configure receptor] **********************************************
2025-07-01 16:27:41,675 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor facts] ***************
2025-07-01 16:27:41,705 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/facts.yml for 10.100.36.50
2025-07-01 16:27:41,718 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor node type for controller] ***
2025-07-01 16:27:41,753 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:41,764 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor hostname, port and protocol facts] ***
2025-07-01 16:27:41,787 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:41,800 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set controller mesh peers] ********
2025-07-01 16:27:41,813 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:27:41,824 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor peers for controller] ***
2025-07-01 16:27:41,868 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:41,879 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor peers fact] **********
2025-07-01 16:27:41,899 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:41,910 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor IPs] *****************
2025-07-01 16:27:41,936 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:27:41,939 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:27:41,951 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor volume facts] ********
2025-07-01 16:27:41,977 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:42,023 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Add tls to volumes] ***************
2025-07-01 16:27:42,050 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:42,061 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Add signing private key to volumes] ***
2025-07-01 16:27:42,086 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:42,097 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Add signing public key to volumes] ***
2025-07-01 16:27:42,124 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:42,135 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set _receptor_volumes and _registry_auth_file facts] ***
2025-07-01 16:27:42,167 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:42,177 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Configure receptor] ***************
2025-07-01 16:27:42,202 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/config.yml for 10.100.36.50
2025-07-01 16:27:42,218 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create the receptor directory] ****
2025-07-01 16:27:42,463 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:42,473 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create the controller directories] ***
2025-07-01 16:27:42,731 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/controller/data/job_execution)
2025-07-01 16:27:42,933 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/controller/data/projects)
2025-07-01 16:27:42,945 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create the receptor configuration] ***
2025-07-01 16:27:43,383 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:43,397 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create podman volumes] ************
2025-07-01 16:27:43,424 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:27:43,442 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Manage the receptor volumes] ******
2025-07-01 16:27:43,907 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=receptor_run)
2025-07-01 16:27:44,367 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=receptor_runner)
2025-07-01 16:27:44,786 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=receptor_home)
2025-07-01 16:27:45,224 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=receptor_data)
2025-07-01 16:27:45,236 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Configure TLS] ********************
2025-07-01 16:27:45,270 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/tls.yml for 10.100.36.50
2025-07-01 16:27:45,289 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Install python-cryptography] ******
2025-07-01 16:27:49,119 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:49,130 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Check the current receptor private key] ***
2025-07-01 16:27:49,362 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:49,373 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Generate a private key] ***********
2025-07-01 16:27:51,583 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:51,594 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Check the current receptor certificate] ***
2025-07-01 16:27:51,822 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:51,833 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Generate a certificate signing request] ***
2025-07-01 16:27:52,527 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:52,539 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Generate a self signed x509 certificate] ***
2025-07-01 16:27:53,385 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:53,396 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy receptor TLS certificate] ****
2025-07-01 16:27:53,419 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:27:53,430 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy receptor TLS key] ************
2025-07-01 16:27:53,452 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:27:53,463 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Configure signing] ****************
2025-07-01 16:27:53,497 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/signing.yml for 10.100.36.50
2025-07-01 16:27:53,519 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Install python-cryptography] ******
2025-07-01 16:27:57,289 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:27:57,300 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Generate a RSA private key] *******
2025-07-01 16:27:58,896 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:27:58,906 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Generate a RSA public key] ********
2025-07-01 16:28:00,055 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:00,071 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create local temporary directory] ***
2025-07-01 16:28:00,319 p=32980 u=binus n=ansible | changed: [10.100.36.50 -> localhost]
2025-07-01 16:28:00,330 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Fetch files locally] **************
2025-07-01 16:28:00,590 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=private)
2025-07-01 16:28:00,828 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=public)
2025-07-01 16:28:00,839 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy RSA public key] **************
2025-07-01 16:28:01,338 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:01,349 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy RSA private key] *************
2025-07-01 16:28:01,785 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:01,801 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Remove local temporary directory] ***
2025-07-01 16:28:02,029 p=32980 u=binus n=ansible | changed: [10.100.36.50 -> localhost]
2025-07-01 16:28:02,040 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy receptor signing RSA public key] ***
2025-07-01 16:28:02,062 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:02,073 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Copy receptor signing RSA private key] ***
2025-07-01 16:28:02,096 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:02,108 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Handle container image update] ****
2025-07-01 16:28:02,136 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/update.yml for 10.100.36.50
2025-07-01 16:28:02,163 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Get receptor container information] ***
2025-07-01 16:28:02,455 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:02,466 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Get receptor image information] ***
2025-07-01 16:28:02,788 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:02,799 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Set receptor update fact] *********
2025-07-01 16:28:02,825 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:02,836 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Stop receptor service on update] ***
2025-07-01 16:28:02,852 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:02,863 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Configure containers] *************
2025-07-01 16:28:02,888 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/containers.yml for 10.100.36.50
2025-07-01 16:28:02,915 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Create the receptor container] ****
2025-07-01 16:28:13,810 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:13,821 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Ensure receptor container is enabled and started] ***
2025-07-01 16:28:13,847 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/receptor/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:28:13,876 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Manage receptor container via systemd] ***
2025-07-01 16:28:14,895 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:14,906 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.receptor : Add firewalld rules] **************
2025-07-01 16:28:14,926 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:15,009 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.receptor : Restart receptor] ******
2025-07-01 16:28:15,986 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:16,008 p=32980 u=binus n=ansible | PLAY [Install the Automation Controller] *******************************************
2025-07-01 16:28:16,037 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get automation controller version] ***
2025-07-01 16:28:16,062 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/version.yml for 10.100.36.50
2025-07-01 16:28:16,079 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get automation controller version] ***
2025-07-01 16:28:18,116 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,127 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set automation controller version fact] ***
2025-07-01 16:28:18,149 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,160 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set automation controller facts] ***
2025-07-01 16:28:18,189 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/facts.yml for 10.100.36.50
2025-07-01 16:28:18,207 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller hostname, port(s) and protocol] ***
2025-07-01 16:28:18,230 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,241 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add https port to controller port list] ***
2025-07-01 16:28:18,263 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,274 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller URL] ***
2025-07-01 16:28:18,294 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,305 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller IPs] ***
2025-07-01 16:28:18,331 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:28:18,334 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:28:18,346 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql container to requires when on the same node] ***
2025-07-01 16:28:18,368 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,379 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set automation controller volumes] ***
2025-07-01 16:28:18,426 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,437 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql tls to automation controller volumes] ***
2025-07-01 16:28:18,453 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:18,464 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add postgresql socket directory to common automation controller volumes] ***
2025-07-01 16:28:18,490 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:18,502 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set rsyslog/task/web automation controller volumes] ***
2025-07-01 16:28:18,524 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,535 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add tls to web automation controller volumes] ***
2025-07-01 16:28:18,560 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,571 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set systemd requires] ***
2025-07-01 16:28:18,596 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,607 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set environment variables for recent AAP releases] ***
2025-07-01 16:28:18,626 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:18,638 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create podman volumes] ***
2025-07-01 16:28:18,662 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:28:18,683 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Manage the Automation Controller nginx volume] ***
2025-07-01 16:28:19,254 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:19,265 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller directories] ***
2025-07-01 16:28:19,566 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/controller/etc/conf.d)
2025-07-01 16:28:19,775 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=/home/binus/aap/controller/data/job_execution)
2025-07-01 16:28:20,079 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/controller/data/logs)
2025-07-01 16:28:20,343 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=/home/binus/aap/controller/data/projects)
2025-07-01 16:28:20,543 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=/home/binus/aap/controller/data/rsyslog)
2025-07-01 16:28:20,555 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure postgresql] ***
2025-07-01 16:28:20,597 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/postgresql.yml for 10.100.36.50
2025-07-01 16:28:20,618 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Install python-psycopg2] ***
2025-07-01 16:28:24,417 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:24,428 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Wait for postgresql to be ready] ***
2025-07-01 16:28:24,703 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:24,715 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the automation controller postgresql user] ***
2025-07-01 16:28:25,005 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:25,017 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Grant the automation controller role to postgresql admin user] ***
2025-07-01 16:28:25,290 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:25,301 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the automation controller postgresql database] ***
2025-07-01 16:28:25,661 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:25,672 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure TLS] ********
2025-07-01 16:28:25,706 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/tls.yml for 10.100.36.50
2025-07-01 16:28:25,729 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Install python-cryptography] ***
2025-07-01 16:28:29,566 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:29,576 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Check the current controller private key] ***
2025-07-01 16:28:29,809 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:29,823 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Generate a private key] ***
2025-07-01 16:28:31,141 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:31,152 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Check the current controller certificate] ***
2025-07-01 16:28:31,370 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:31,381 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Generate a certificate signing request] ***
2025-07-01 16:28:32,078 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:32,089 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Generate a self signed x509 certificate] ***
2025-07-01 16:28:32,862 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:32,873 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Copy controller TLS certificate] ***
2025-07-01 16:28:32,896 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:32,907 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Copy controller TLS key] ***
2025-07-01 16:28:32,930 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:32,941 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure TLS for postgresql] ***
2025-07-01 16:28:32,957 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:32,967 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure nginx] ******
2025-07-01 16:28:32,994 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/nginx.yml for 10.100.36.50
2025-07-01 16:28:33,020 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get sysctl net.ipv4.ip_unprivileged_port_start setting] ***
2025-07-01 16:28:33,224 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:33,234 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Allow rootless container to bind from port 80 onwards] ***
2025-07-01 16:28:33,252 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:33,263 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the nginx directory] ***
2025-07-01 16:28:33,509 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:33,520 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the nginx configuration] ***
2025-07-01 16:28:33,932 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:33,944 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the redirect page] ***
2025-07-01 16:28:34,459 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:34,470 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure rsyslog] ****
2025-07-01 16:28:34,497 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/rsyslog.yml for 10.100.36.50
2025-07-01 16:28:34,526 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the rsyslog directory] ***
2025-07-01 16:28:34,774 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:34,786 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure supervisor] ***
2025-07-01 16:28:34,810 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/supervisor.yml for 10.100.36.50
2025-07-01 16:28:34,839 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the supervisor directory] ***
2025-07-01 16:28:35,073 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:35,084 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure podman secrets] ***
2025-07-01 16:28:35,117 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/secrets.yml for 10.100.36.50
2025-07-01 16:28:35,146 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get all podman secrets] ***
2025-07-01 16:28:35,464 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:35,476 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get the existing controller websocket secret] ***
2025-07-01 16:28:35,505 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:35,516 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set the controller channels secret fact] ***
2025-07-01 16:28:35,543 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:35,554 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get the existing controller secret key secret] ***
2025-07-01 16:28:35,582 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:35,593 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set the controller secret key secret fact] ***
2025-07-01 16:28:35,620 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:35,632 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get the existing controller resource server secret] ***
2025-07-01 16:28:35,663 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:35,714 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set the controller resource server secret fact] ***
2025-07-01 16:28:35,837 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:35,848 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller channels secret] ***
2025-07-01 16:28:36,257 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:36,268 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller postgres secret] ***
2025-07-01 16:28:36,773 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:36,784 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller SECRET_KEY secret] ***
2025-07-01 16:28:37,227 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:37,238 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller resource server secret] ***
2025-07-01 16:28:37,647 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:37,659 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get all podman secrets after update] ***
2025-07-01 16:28:38,005 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:38,017 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller recreate container fact] ***
2025-07-01 16:28:38,043 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:38,054 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller configuration] ***
2025-07-01 16:28:38,528 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:38,539 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller extra configurations] ***
2025-07-01 16:28:39,003 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=callback_receiver_workers)
2025-07-01 16:28:39,438 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=cluster_host_id)
2025-07-01 16:28:39,855 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=container_groups)
2025-07-01 16:28:40,300 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=execution_environments)
2025-07-01 16:28:40,764 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=insights)
2025-07-01 16:28:41,172 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=redis)
2025-07-01 16:28:41,614 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=subscription_usage_model)
2025-07-01 16:28:41,627 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Check current somaxconn value] ***
2025-07-01 16:28:41,848 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:41,860 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Check current net.ipv4.tcp_max_syn_backlog value] ***
2025-07-01 16:28:42,066 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:42,078 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set somaxconn to value greater than or equal to controller_uwsgi_listen_queue_size in supervisor config] ***
2025-07-01 16:28:42,097 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:42,110 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set tcp_max_syn_backlog to value greater than or equal to controller_uwsgi_listen_queue_size in supervisor config] ***
2025-07-01 16:28:42,129 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:42,141 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the controller uwsgi configuration] ***
2025-07-01 16:28:42,604 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:42,614 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create task custom command] ***
2025-07-01 16:28:43,050 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:28:43,061 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Handle container image update] ***
2025-07-01 16:28:43,089 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/update.yml for 10.100.36.50
2025-07-01 16:28:43,124 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get controller container information] ***
2025-07-01 16:28:43,564 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:43,578 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Get controller image information] ***
2025-07-01 16:28:44,050 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:44,062 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set controller update fact] ***
2025-07-01 16:28:44,093 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:28:44,104 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Stop controller service on update] ***
2025-07-01 16:28:44,121 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:28:44,133 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure containers] ***
2025-07-01 16:28:44,161 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/containers.yml for 10.100.36.50
2025-07-01 16:28:44,197 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the automation controller rsyslog container] ***
2025-07-01 16:29:16,357 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:29:16,368 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the automation controller task container] ***
2025-07-01 16:29:16,953 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:29:16,964 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the automation controller web container] ***
2025-07-01 16:29:17,544 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:29:17,555 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Initialize data] ******
2025-07-01 16:29:17,595 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/init.yml for 10.100.36.50
2025-07-01 16:29:17,632 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Initialize the automation controller database] ***
2025-07-01 16:32:29,251 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:32:29,262 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the default execution environments] ***
2025-07-01 16:32:34,402 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:32:34,414 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register the controller instance in the database] ***
2025-07-01 16:32:40,051 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:32:40,063 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register the execution/hop instances in the database] ***
2025-07-01 16:32:40,076 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:32:40,088 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set the receptor listener port] ***
2025-07-01 16:32:45,641 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:32:45,653 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register controller peers in the database] ***
2025-07-01 16:32:45,671 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:32:45,683 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register other peers in the database] ***
2025-07-01 16:32:45,696 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:32:45,708 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register controller nodes to default queue] ***
2025-07-01 16:32:53,055 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:32:53,066 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register execution nodes to default queue] ***
2025-07-01 16:32:53,087 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:32:53,098 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register controller nodes to controlplane queue] ***
2025-07-01 16:32:59,781 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:32:59,792 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Register execution nodes to executionplane queue] ***
2025-07-01 16:32:59,811 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:32:59,822 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create django super user] ***
2025-07-01 16:33:05,468 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:05,480 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Update django super user password] ***
2025-07-01 16:33:12,285 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:12,295 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Create the default organization] ***
2025-07-01 16:33:18,053 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:18,064 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Ensure automation controller containers are enabled and started] ***
2025-07-01 16:33:18,090 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:33:18,132 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Set facts for systemd services] ***
2025-07-01 16:33:18,150 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:18,161 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Ensure automation controller containers are enabled and started] ***
2025-07-01 16:33:19,048 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-controller-task.service)
2025-07-01 16:33:19,928 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-controller-web.service)
2025-07-01 16:33:20,825 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-controller-rsyslog.service)
2025-07-01 16:33:20,841 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Add firewalld rules] ***
2025-07-01 16:33:20,867 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationcontroller/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:33:20,911 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Manage automation controller firewalld ports] ***
2025-07-01 16:33:21,369 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8080)
2025-07-01 16:33:21,784 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8443)
2025-07-01 16:33:21,796 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Configure the license] ***
2025-07-01 16:33:21,819 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:21,857 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationcontroller : Restart controller rsyslog] ***
2025-07-01 16:33:23,222 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:23,232 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationcontroller : Restart controller task] ***
2025-07-01 16:33:25,921 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:25,933 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationcontroller : Restart controller web] ***
2025-07-01 16:33:40,105 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:40,127 p=32980 u=binus n=ansible | PLAY [Install the Automation EDA] **************************************************
2025-07-01 16:33:40,156 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get eda version] *************
2025-07-01 16:33:40,183 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/version.yml for 10.100.36.50
2025-07-01 16:33:40,196 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get eda version from container image] ***
2025-07-01 16:33:42,669 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:42,679 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda version fact] ********
2025-07-01 16:33:42,732 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:42,743 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set automation eda facts] ****
2025-07-01 16:33:42,853 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/facts.yml for 10.100.36.50
2025-07-01 16:33:42,923 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda hostname, port(s) and protocol] ***
2025-07-01 16:33:43,007 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,019 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda redis hostname] ******
2025-07-01 16:33:43,089 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:43,243 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add https port to eda port list] ***
2025-07-01 16:33:43,320 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,338 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda URL] *****************
2025-07-01 16:33:43,417 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,428 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda IPs] *****************
2025-07-01 16:33:43,510 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:33:43,511 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:33:43,523 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set decision environment facts] ***
2025-07-01 16:33:43,592 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,611 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Remove redis container dependency when using multiple nodes] ***
2025-07-01 16:33:43,681 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:43,692 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql container to requires when on the same node] ***
2025-07-01 16:33:43,778 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,790 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set automation eda env and volume facts] ***
2025-07-01 16:33:43,868 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,888 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql password secret to secrets] ***
2025-07-01 16:33:43,951 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:43,972 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql tls to common automation eda volumes] ***
2025-07-01 16:33:44,042 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:44,052 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add postgresql socket directory to common automation eda volumes] ***
2025-07-01 16:33:44,135 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:44,153 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add redis password to secrets] ***
2025-07-01 16:33:44,209 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:44,238 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set scheduler/web/worker automation eda env/volumes/secrets] ***
2025-07-01 16:33:44,322 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:44,333 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add tls to web automation eda volumes] ***
2025-07-01 16:33:44,408 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:44,437 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Use local redis instance with single node] ***
2025-07-01 16:33:44,502 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:44,522 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add redis tls to api/scheduler/workers automation eda volumes] ***
2025-07-01 16:33:44,558 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:44,574 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set redis cluster hostnames] ***
2025-07-01 16:33:44,595 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:33:44,611 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda rulebook queue name] ***
2025-07-01 16:33:44,638 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:44,654 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set systemd requires] ********
2025-07-01 16:33:44,683 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:44,700 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure postgresql] ********
2025-07-01 16:33:44,750 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/postgresql.yml for 10.100.36.50
2025-07-01 16:33:44,772 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Install python-psycopg2] *****
2025-07-01 16:33:51,110 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:51,121 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Wait for postgresql to be ready] ***
2025-07-01 16:33:51,420 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:51,432 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda postgresql user] ***
2025-07-01 16:33:51,733 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:51,745 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Grant the automation eda role to postgresql admin user] ***
2025-07-01 16:33:52,054 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:52,065 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda postgresql database] ***
2025-07-01 16:33:52,547 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:52,557 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure automation EDA] ****
2025-07-01 16:33:52,582 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/config.yml for 10.100.36.50
2025-07-01 16:33:52,605 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda directory] ****
2025-07-01 16:33:52,825 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:52,835 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda configuration file] ***
2025-07-01 16:33:53,365 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:33:53,377 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure TLS for nginx] *****
2025-07-01 16:33:53,410 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/tls.yml for 10.100.36.50
2025-07-01 16:33:53,434 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Install python-cryptography] ***
2025-07-01 16:33:57,472 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:57,483 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Check the current eda private key] ***
2025-07-01 16:33:57,748 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:33:57,759 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Generate a private key for nginx] ***
2025-07-01 16:34:00,121 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:00,138 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Check the current eda certificate] ***
2025-07-01 16:34:00,387 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:00,397 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Generate a certificate signing request for nginx] ***
2025-07-01 16:34:01,091 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:01,102 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Generate a self signed x509 certificate for nginx] ***
2025-07-01 16:34:01,950 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:01,962 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Copy eda TLS certificate] ****
2025-07-01 16:34:01,983 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:01,994 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Copy eda TLS key] ************
2025-07-01 16:34:02,016 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:02,026 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure TLS for redis] *****
2025-07-01 16:34:02,044 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:02,055 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure TLS for postgresql] ***
2025-07-01 16:34:02,070 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:02,080 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure nginx] *************
2025-07-01 16:34:02,107 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/nginx.yml for 10.100.36.50
2025-07-01 16:34:02,134 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get sysctl net.ipv4.ip_unprivileged_port_start setting] ***
2025-07-01 16:34:02,337 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:02,352 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Allow rootless container to bind from port 80 onwards] ***
2025-07-01 16:34:02,370 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:02,382 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the nginx directory] ***
2025-07-01 16:34:02,674 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:02,685 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the nginx configuration] ***
2025-07-01 16:34:03,241 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:03,252 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the redirect page] ****
2025-07-01 16:34:03,707 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:03,719 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure podman secrets] ****
2025-07-01 16:34:03,753 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/secrets.yml for 10.100.36.50
2025-07-01 16:34:03,783 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get all podman secrets] ******
2025-07-01 16:34:04,133 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:04,144 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get the existing eda resource server secret] ***
2025-07-01 16:34:04,171 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:04,182 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set the eda resource server secret fact] ***
2025-07-01 16:34:04,215 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:04,226 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get the existing eda SECRET_KEY secret] ***
2025-07-01 16:34:04,254 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:04,266 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set the eda SECRET_KEY secret fact] ***
2025-07-01 16:34:04,293 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:04,304 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda admin password secret] ***
2025-07-01 16:34:04,759 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:04,770 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda SECRET_KEY secret] ***
2025-07-01 16:34:05,170 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:05,182 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda resource server secret] ***
2025-07-01 16:34:05,587 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:05,598 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda db password secret] ***
2025-07-01 16:34:05,992 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:06,003 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the eda redis password secret] ***
2025-07-01 16:34:06,021 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:06,032 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get all podman secrets after update] ***
2025-07-01 16:34:06,413 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:06,423 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda recreate container fact] ***
2025-07-01 16:34:06,448 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:06,459 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create podman volumes] *******
2025-07-01 16:34:06,484 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:34:06,518 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Manage the automation eda data volume] ***
2025-07-01 16:34:07,352 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:07,364 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Manage the automation eda nginx volume] ***
2025-07-01 16:34:07,858 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:07,869 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Handle container image update] ***
2025-07-01 16:34:07,896 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/update.yml for 10.100.36.50
2025-07-01 16:34:07,931 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set facts for containers] ****
2025-07-01 16:34:07,948 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:07,958 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda workers to containers list] ***
2025-07-01 16:34:07,987 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:34:07,990 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:34:08,002 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda activation workers containers list] ***
2025-07-01 16:34:08,030 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:34:08,033 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:34:08,045 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get eda container information] ***
2025-07-01 16:34:08,670 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:08,681 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Get eda image information] ***
2025-07-01 16:34:09,049 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:09,061 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set eda update fact] *********
2025-07-01 16:34:09,089 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:34:09,101 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Stop eda service on update] ***
2025-07-01 16:34:09,117 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:34:09,127 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Configure containers] ********
2025-07-01 16:34:09,158 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/containers.yml for 10.100.36.50
2025-07-01 16:34:09,196 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda api container] ***
2025-07-01 16:34:34,184 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:34,195 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda daphne container] ***
2025-07-01 16:34:34,930 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:34,942 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda web container] ***
2025-07-01 16:34:47,994 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:48,004 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda worker container] ***
2025-07-01 16:34:49,122 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:34:49,964 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:34:49,979 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda activation worker container] ***
2025-07-01 16:34:51,243 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:34:52,002 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:34:52,017 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the automation eda scheduler container] ***
2025-07-01 16:34:52,667 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:34:52,678 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Initialize data] *************
2025-07-01 16:34:52,706 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/init.yml for 10.100.36.50
2025-07-01 16:34:52,745 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Initialize the automation eda database] ***
2025-07-01 16:35:27,193 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:27,211 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create the initial automation eda data] ***
2025-07-01 16:35:30,717 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:30,729 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create django super user] ****
2025-07-01 16:35:33,912 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:33,924 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Update django super user password] ***
2025-07-01 16:35:36,976 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:36,987 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Ensure automation eda containers are enabled and started] ***
2025-07-01 16:35:37,014 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:35:37,056 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Set facts for systemd services] ***
2025-07-01 16:35:37,074 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:35:37,085 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda daphne to systemd services list] ***
2025-07-01 16:35:37,107 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:35:37,120 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda workers to systemd services list] ***
2025-07-01 16:35:37,204 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:35:37,210 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:35:37,220 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda activation workers to systemd services list] ***
2025-07-01 16:35:37,254 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:35:37,257 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:35:37,269 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add eda scheduler to systemd services list] ***
2025-07-01 16:35:37,293 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:35:37,304 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Manage automation eda containers via systemd] ***
2025-07-01 16:35:37,987 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-api.service)
2025-07-01 16:35:39,270 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-web.service)
2025-07-01 16:35:41,334 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-daphne.service)
2025-07-01 16:35:43,417 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-worker-1.service)
2025-07-01 16:35:44,444 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-worker-2.service)
2025-07-01 16:35:45,281 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-activation-worker-1.service)
2025-07-01 16:35:46,213 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-activation-worker-2.service)
2025-07-01 16:35:47,083 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-eda-scheduler.service)
2025-07-01 16:35:47,105 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add firewalld rules] *********
2025-07-01 16:35:47,130 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:35:47,175 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Manage automation eda firewalld ports] ***
2025-07-01 16:35:47,662 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8082)
2025-07-01 16:35:48,143 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8445)
2025-07-01 16:35:48,155 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Add decision environments] ***
2025-07-01 16:35:48,190 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationeda/tasks/decision_environment.yml for 10.100.36.50
2025-07-01 16:35:48,235 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Ensure automation eda is ready] ***
2025-07-01 16:35:48,661 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:35:48,673 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create automation eda registry credentials] ***
2025-07-01 16:35:50,505 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:50,516 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create automation eda decision environments] ***
2025-07-01 16:35:52,381 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Default Decision Environment', 'image': 'registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest'})
2025-07-01 16:35:52,394 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create automation eda registry credentials for hub] ***
2025-07-01 16:35:54,138 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:54,149 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationeda : Create automation eda decision environments for hub] ***
2025-07-01 16:35:55,785 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item={'name': 'Default Decision Environment', 'image': 'registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest'})
2025-07-01 16:35:55,824 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda api] ***
2025-07-01 16:35:56,946 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:56,957 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda daphne] ***
2025-07-01 16:35:59,143 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:35:59,157 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda web] ***
2025-07-01 16:36:00,798 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:00,828 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda workers] ***
2025-07-01 16:36:02,481 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:36:03,529 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:36:03,542 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda activation workers] ***
2025-07-01 16:36:04,767 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:36:05,899 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:36:05,913 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationeda : Restart eda scheduler] ***
2025-07-01 16:36:07,286 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:07,308 p=32980 u=binus n=ansible | PLAY [Install the Automation Hub] **************************************************
2025-07-01 16:36:07,339 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get pulpcore version] ********
2025-07-01 16:36:07,366 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/version.yml for 10.100.36.50
2025-07-01 16:36:07,383 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get pulpcore version from container image] ***
2025-07-01 16:36:09,020 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,031 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set pulpcore version fact] ***
2025-07-01 16:36:09,052 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,064 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set automation hub facts] ****
2025-07-01 16:36:09,095 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/facts.yml for 10.100.36.50
2025-07-01 16:36:09,112 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub hostname, port(s) and protocol] ***
2025-07-01 16:36:09,139 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,151 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add https port to hub port list] ***
2025-07-01 16:36:09,174 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,185 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub IPs] *****************
2025-07-01 16:36:09,212 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:36:09,215 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:36:09,229 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql container to requires when on the same node] ***
2025-07-01 16:36:09,251 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,263 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set automation hub volumes] ***
2025-07-01 16:36:09,291 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,302 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add hub tmp volume when using NFS] ***
2025-07-01 16:36:09,318 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,329 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql socket directory to common automation hub volumes] ***
2025-07-01 16:36:09,352 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,364 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add postgresql tls to automation hub volumes] ***
2025-07-01 16:36:09,381 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,392 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set api/content/worker automation hub volumes] ***
2025-07-01 16:36:09,417 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,428 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add galaxy importer to worker volumes] ***
2025-07-01 16:36:09,451 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,462 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add tls to web automation hub volumes] ***
2025-07-01 16:36:09,488 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,500 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add collection volume to automation worker volumes] ***
2025-07-01 16:36:09,517 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,528 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add collection secret to automation worker secrets] ***
2025-07-01 16:36:09,544 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,555 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add container volume to automation worker volumes] ***
2025-07-01 16:36:09,571 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,582 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add container secret to automation worker secrets] ***
2025-07-01 16:36:09,598 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:09,611 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set systemd requires] ********
2025-07-01 16:36:09,635 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:09,647 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create podman volumes] *******
2025-07-01 16:36:09,672 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/volumes.yml for 10.100.36.50
2025-07-01 16:36:09,693 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Manage the Automation Hub data volume] ***
2025-07-01 16:36:10,239 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:10,250 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Manage the Automation Hub tmp volume] ***
2025-07-01 16:36:10,267 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:10,278 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Manage the Automation Hub nginx volume] ***
2025-07-01 16:36:10,722 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:10,732 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the hub directory] ****
2025-07-01 16:36:10,958 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:10,969 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Handle NFS Data directory] ***
2025-07-01 16:36:10,986 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:10,998 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure postgresql] ********
2025-07-01 16:36:11,044 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/postgresql.yml for 10.100.36.50
2025-07-01 16:36:11,068 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Install python-psycopg2] *****
2025-07-01 16:36:14,937 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:14,949 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Wait for postgresql to be ready] ***
2025-07-01 16:36:15,238 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:15,249 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub postgresql user] ***
2025-07-01 16:36:15,543 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:15,554 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Grant the automation hub role to postgresql admin user] ***
2025-07-01 16:36:15,844 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:15,855 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub postgresql database] ***
2025-07-01 16:36:16,219 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:16,230 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Enable the hstore extension on automation hub database] ***
2025-07-01 16:36:16,707 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:16,719 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Install python-cryptography] ***
2025-07-01 16:36:20,495 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:20,507 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure TLS] ***************
2025-07-01 16:36:20,540 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/tls.yml for 10.100.36.50
2025-07-01 16:36:20,567 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Check the current hub private key] ***
2025-07-01 16:36:20,789 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:20,800 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate a private key] ******
2025-07-01 16:36:23,230 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:23,241 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Check the current hub certificate] ***
2025-07-01 16:36:23,459 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:23,471 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate a certificate signing request] ***
2025-07-01 16:36:24,172 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:24,183 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate a self signed x509 certificate] ***
2025-07-01 16:36:24,989 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:25,001 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Copy hub TLS certificate] ****
2025-07-01 16:36:25,024 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:25,035 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Copy hub TLS key] ************
2025-07-01 16:36:25,059 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:25,072 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure TLS for postgresql] ***
2025-07-01 16:36:25,089 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:25,104 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure nginx] *************
2025-07-01 16:36:25,130 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/nginx.yml for 10.100.36.50
2025-07-01 16:36:25,159 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get sysctl net.ipv4.ip_unprivileged_port_start setting] ***
2025-07-01 16:36:25,389 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:25,399 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Allow rootless container to bind from port 80 onwards] ***
2025-07-01 16:36:25,417 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:25,429 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the nginx directory] ***
2025-07-01 16:36:25,652 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:25,662 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the nginx configuration] ***
2025-07-01 16:36:26,076 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:26,091 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the redirect page] ****
2025-07-01 16:36:26,585 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:26,596 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure podman secrets] ****
2025-07-01 16:36:26,631 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/secrets.yml for 10.100.36.50
2025-07-01 16:36:26,661 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get all podman secrets] ******
2025-07-01 16:36:27,010 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:27,021 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get the existing hub resource server secret] ***
2025-07-01 16:36:27,051 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:27,062 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set the hub resource server secret fact] ***
2025-07-01 16:36:27,098 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:27,110 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get the existing hub database fields secret] ***
2025-07-01 16:36:27,139 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:27,151 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set the hub database fields secret fact] ***
2025-07-01 16:36:27,185 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:27,198 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the hub settings secret] ***
2025-07-01 16:36:27,887 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:27,899 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the hub database fields secret] ***
2025-07-01 16:36:28,309 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:28,321 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the collection signing key passphrase secret] ***
2025-07-01 16:36:28,338 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:28,350 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the container signing key passphrase secret] ***
2025-07-01 16:36:28,367 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:28,379 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the hub resource server secret] ***
2025-07-01 16:36:28,785 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:28,796 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get the existing hub secret key secret] ***
2025-07-01 16:36:28,824 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:28,836 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set the hub secret key secret fact] ***
2025-07-01 16:36:28,863 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:28,875 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the hub secret key secret] ***
2025-07-01 16:36:29,290 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:29,301 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get all podman secrets after update] ***
2025-07-01 16:36:29,682 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:29,693 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub recreate container fact] ***
2025-07-01 16:36:29,720 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:29,731 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure collection signing] ***
2025-07-01 16:36:29,748 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:29,759 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure container signing] ***
2025-07-01 16:36:29,775 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:29,787 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate the container authentication private key] ***
2025-07-01 16:36:30,078 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:30,094 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate the container authentication public key] ***
2025-07-01 16:36:30,418 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:36:30,429 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Copy the container authentication private key to all nodes] ***
2025-07-01 16:36:30,833 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:30,844 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Copy the the container authentication public key to all nodes] ***
2025-07-01 16:36:31,304 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:31,316 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Generate galaxy importer configuration] ***
2025-07-01 16:36:31,338 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:31,350 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Handle container image update] ***
2025-07-01 16:36:31,377 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/update.yml for 10.100.36.50
2025-07-01 16:36:31,412 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set facts for containers] ****
2025-07-01 16:36:31,429 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:31,440 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add hub workers to containers list] ***
2025-07-01 16:36:31,472 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:36:31,474 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:36:31,486 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get hub container information] ***
2025-07-01 16:36:31,984 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:31,994 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get hub image information] ***
2025-07-01 16:36:32,410 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:32,423 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set hub update fact] *********
2025-07-01 16:36:32,450 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:36:32,461 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Stop hub service on update] ***
2025-07-01 16:36:32,479 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:36:32,491 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Configure containers] ********
2025-07-01 16:36:32,522 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/containers.yml for 10.100.36.50
2025-07-01 16:36:32,559 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub api container] ***
2025-07-01 16:37:09,296 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:37:09,308 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub content container] ***
2025-07-01 16:37:09,949 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:37:09,960 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub web container] ***
2025-07-01 16:37:25,815 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:37:25,827 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create the automation hub worker container] ***
2025-07-01 16:37:26,625 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:37:27,273 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:37:27,287 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Initialize data] *************
2025-07-01 16:37:27,320 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/init.yml for 10.100.36.50
2025-07-01 16:37:27,359 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Initialize the automation hub database] ***
2025-07-01 16:38:53,463 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:38:53,480 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Update admin user password] ***
2025-07-01 16:38:57,518 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:38:57,530 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Schedule resource sync task] ***
2025-07-01 16:39:01,393 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:01,404 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add the collection signing service] ***
2025-07-01 16:39:01,423 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:39:01,434 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add the container signing service] ***
2025-07-01 16:39:01,452 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:39:01,463 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Ensure automation hub containers are enabled and started] ***
2025-07-01 16:39:01,490 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/systemd.yml for 10.100.36.50
2025-07-01 16:39:01,532 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Set facts for systemd services] ***
2025-07-01 16:39:01,550 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:01,561 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add hub workers to systemd services list] ***
2025-07-01 16:39:01,599 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=1)
2025-07-01 16:39:01,602 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=2)
2025-07-01 16:39:01,613 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Manage automation hub container via systemd] ***
2025-07-01 16:39:02,425 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-hub-api.service)
2025-07-01 16:39:03,337 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-hub-content.service)
2025-07-01 16:39:05,647 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-hub-web.service)
2025-07-01 16:39:07,703 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-hub-worker-1.service)
2025-07-01 16:39:09,593 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=automation-hub-worker-2.service)
2025-07-01 16:39:09,609 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Add firewalld rules] *********
2025-07-01 16:39:09,636 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationhub/tasks/firewalld.yml for 10.100.36.50
2025-07-01 16:39:09,678 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Manage automation hub firewalld ports] ***
2025-07-01 16:39:10,117 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8081)
2025-07-01 16:39:10,522 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=8444)
2025-07-01 16:39:10,561 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationhub : Restart hub api] ***
2025-07-01 16:39:13,150 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:13,161 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationhub : Restart hub content] ***
2025-07-01 16:39:18,781 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:18,798 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationhub : Restart hub web] ***
2025-07-01 16:39:20,509 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:20,520 p=32980 u=binus n=ansible | RUNNING HANDLER [ansible.containerized_installer.automationhub : Restart hub workers] ***
2025-07-01 16:39:22,347 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=1)
2025-07-01 16:39:23,929 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=2)
2025-07-01 16:39:23,954 p=32980 u=binus n=ansible | PLAY [Merge components organization to gateway] ************************************
2025-07-01 16:39:23,984 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway hostname, port(s) and protocol] ***
2025-07-01 16:39:24,012 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,023 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add https port to gateway port list] ***
2025-07-01 16:39:24,046 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,057 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add https port to gateway proxy port list] ***
2025-07-01 16:39:24,080 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,092 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Combine gateway ports] ***
2025-07-01 16:39:24,112 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,124 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway URL] *********
2025-07-01 16:39:24,145 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,157 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway IPs] *********
2025-07-01 16:39:24,185 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=10.100.36.50)
2025-07-01 16:39:24,188 p=32980 u=binus n=ansible | ok: [10.100.36.50] => (item=fe80::250:56ff:fe8d:aa39)
2025-07-01 16:39:24,200 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql container to requires when on the same node] ***
2025-07-01 16:39:24,223 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,236 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis hostname] ***
2025-07-01 16:39:24,256 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,270 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis proto/host facts] ***
2025-07-01 16:39:24,303 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,314 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set gateway redis url facts] ***
2025-07-01 16:39:24,341 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,352 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Append redis database when standalone] ***
2025-07-01 16:39:24,376 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,389 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set redis cluster hostnames] ***
2025-07-01 16:39:24,408 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:39:24,420 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set automation gateway volumes] ***
2025-07-01 16:39:24,448 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,459 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql password secret to secrets] ***
2025-07-01 16:39:24,482 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,493 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql socket directory to common automation gateway volumes] ***
2025-07-01 16:39:24,515 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:39:24,528 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set web automation gateway and proxy volumes] ***
2025-07-01 16:39:24,548 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,559 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add postgresql tls to automation gateway volumes] ***
2025-07-01 16:39:24,575 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:39:24,586 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add tls to automation gateway volumes] ***
2025-07-01 16:39:24,610 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,621 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add tls to automation gateway proxy volumes] ***
2025-07-01 16:39:24,647 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,660 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Add redis tls to automation gateway volumes] ***
2025-07-01 16:39:24,685 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:24,696 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Render proxy variables] ***
2025-07-01 16:39:25,134 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:25,145 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Set systemd requires] ****
2025-07-01 16:39:25,172 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:25,193 p=32980 u=binus n=ansible | TASK [Migrate component resources] *************************************************
2025-07-01 16:39:25,244 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Ensure automation gateway proxy is ready] ***
2025-07-01 16:39:25,583 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:39:25,594 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge controller organization] ***
2025-07-01 16:39:25,627 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/data_migration.yml for 10.100.36.50
2025-07-01 16:39:25,639 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge organization] ******
2025-07-01 16:39:30,507 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:30,517 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge eda organization] ***
2025-07-01 16:39:30,549 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/data_migration.yml for 10.100.36.50
2025-07-01 16:39:30,561 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge organization] ******
2025-07-01 16:39:34,803 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:39:34,814 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge hub organization] ***
2025-07-01 16:39:34,849 p=32980 u=binus n=ansible | included: /home/binus/ansible-automation-platform-containerized-setup-2.5-15/collections/ansible_collections/ansible/containerized_installer/roles/automationgateway/tasks/data_migration.yml for 10.100.36.50
2025-07-01 16:39:34,862 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationgateway : Merge organization] ******
2025-07-01 16:41:45,615 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:41:45,701 p=32980 u=binus n=ansible | PLAY [Trust the Automation Hub registry] *******************************************
2025-07-01 16:41:45,729 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the hub registry directory] ***
2025-07-01 16:41:46,001 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:41:46,012 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Create the hub registry directory alias] ***
2025-07-01 16:41:46,364 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:41:46,379 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.common : Add symlink to the TLS CA bundle] ***
2025-07-01 16:41:46,651 p=32980 u=binus n=ansible | changed: [10.100.36.50]
2025-07-01 16:41:46,701 p=32980 u=binus n=ansible | PLAY [Install and configure performance co-pilot (pcp)] ****************************
2025-07-01 16:41:46,730 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Set pcp facts] *************************
2025-07-01 16:41:46,749 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,761 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Configure pcp] *************************
2025-07-01 16:41:46,780 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,792 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Handle container image update] *********
2025-07-01 16:41:46,811 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,822 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Configure containers] ******************
2025-07-01 16:41:46,841 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,852 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Ensure pcp container is enabled and started] ***
2025-07-01 16:41:46,873 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,886 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.pcp : Add firewalld rules] *******************
2025-07-01 16:41:46,906 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:41:46,955 p=32980 u=binus n=ansible | PLAY [Run the Automation Controller postinstall] ***********************************
2025-07-01 16:41:46,985 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Ensure automation hub is ready] ***
2025-07-01 16:41:47,773 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:41:47,785 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Tag the container images to automation hub] ***
2025-07-01 16:41:48,756 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest)
2025-07-01 16:41:49,027 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel8:latest)
2025-07-01 16:41:49,040 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Push the container images to automation hub] ***
2025-07-01 16:42:04,430 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-minimal-rhel8:latest)
2025-07-01 16:44:09,879 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/ee-supported-rhel8:latest)
2025-07-01 16:44:09,907 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Install the git binary] ***
2025-07-01 16:44:09,927 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:09,943 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Clone the postinstall config repository] ***
2025-07-01 16:44:09,962 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:09,974 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationcontroller : Include vars for automation controller] ***
2025-07-01 16:44:09,993 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:10,004 p=32980 u=binus n=ansible | TASK [Execute automation controller resource configuration] ************************
2025-07-01 16:44:10,022 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:10,072 p=32980 u=binus n=ansible | PLAY [Run the Automation EDA postinstall] ******************************************
2025-07-01 16:44:10,101 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Ensure automation hub is ready] ***
2025-07-01 16:44:11,745 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:44:11,756 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Tag the container images to automation hub] ***
2025-07-01 16:44:12,331 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest)
2025-07-01 16:44:12,344 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Push the container images to automation hub] ***
2025-07-01 16:44:35,612 p=32980 u=binus n=ansible | changed: [10.100.36.50] => (item=registry.redhat.io/ansible-automation-platform-25/de-supported-rhel8:latest)
2025-07-01 16:44:35,711 p=32980 u=binus n=ansible | PLAY [Run the Automation Hub postinstall] ******************************************
2025-07-01 16:44:35,741 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Ensure automation hub is ready] ***
2025-07-01 16:44:35,761 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,773 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create temporary directory for collection tarballs] ***
2025-07-01 16:44:35,792 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,804 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Copy bundled ansible collections] ***
2025-07-01 16:44:35,824 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,835 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Get all collection tarballs] ***
2025-07-01 16:44:35,855 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,868 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Create collection namespaces on Automation Hub] ***
2025-07-01 16:44:35,893 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,905 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Check if collections already exists on Automation Hub] ***
2025-07-01 16:44:35,926 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,938 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Upload collections to Automation Hub] ***
2025-07-01 16:44:35,961 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:35,973 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Move collection to repository] ***
2025-07-01 16:44:35,995 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,008 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Remove temporary directory] ***
2025-07-01 16:44:36,027 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,052 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Install the git binary] ******
2025-07-01 16:44:36,072 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,088 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Clone the postinstall config repository] ***
2025-07-01 16:44:36,107 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,118 p=32980 u=binus n=ansible | TASK [ansible.containerized_installer.automationhub : Include vars for automation hub] ***
2025-07-01 16:44:36,137 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,150 p=32980 u=binus n=ansible | TASK [Execute automation hub resource configuration] *******************************
2025-07-01 16:44:36,169 p=32980 u=binus n=ansible | skipping: [10.100.36.50]
2025-07-01 16:44:36,218 p=32980 u=binus n=ansible | PLAY [Delete the ansible base shared secret] ***************************************
2025-07-01 16:44:36,245 p=32980 u=binus n=ansible | TASK [Delete the ansible base shared secret] ***************************************
2025-07-01 16:44:36,630 p=32980 u=binus n=ansible | ok: [10.100.36.50]
2025-07-01 16:44:36,668 p=32980 u=binus n=ansible | PLAY RECAP *************************************************************************
2025-07-01 16:44:36,668 p=32980 u=binus n=ansible | 10.100.36.50               : ok=622  changed=228  unreachable=0    failed=0    skipped=269  rescued=0    ignored=0   
2025-07-01 16:44:36,668 p=32980 u=binus n=ansible | localhost                  : ok=29   changed=0    unreachable=0    failed=0    skipped=60   rescued=0    ignored=0   
